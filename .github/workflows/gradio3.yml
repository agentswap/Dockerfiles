name: Gradio 3

on:
  schedule:
    - cron: '0 17 * * 2'
  workflow_dispatch:
  push:
    branches: [main]
  pull_request:
    branches: [main]

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{github.repository_owner}}/gradio
  GRADIO_MAJOR_VERSION: 3

concurrency:
  group: ${{github.workflow}}-${{github.ref}}
  cancel-in-progress: true

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        gradio: [3.28.3]
        distro: [python]
        codename: [bullseye, slim-bullseye, alpine3.17]

    permissions:
      packages: write

    steps:
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Log into registry ${{env.REGISTRY}}
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v2
        with:
          registry: ${{env.REGISTRY}}
          username: ${{github.actor}}
          password: ${{secrets.GITHUB_TOKEN}}

      - name: Extract Docker metadata
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: ${{env.REGISTRY}}/${{env.IMAGE_NAME}}
          tags: |
            type=raw,${{matrix.gradio}}-${{matrix.distro}}-${{matrix.codename}}
          labels: |
            org.opencontainers.image.title=Gradio ${{matrix.gradio}} container image based on ${{matrix.distro}} ${{matrix.codename}}
            org.opencontainers.image.description=Gradio ${{matrix.gradio}} container image based on ${{matrix.distro}} ${{matrix.codename}}

      - name: Build and push Docker image from Debian
        uses: docker/build-push-action@v4
        env:
          PYPI_GRADIO_VERSION: ${{matrix.gradio}}
          DISTRO: ${{matrix.distro}}
          CODENAME: ${{matrix.codename}}
        if: contains(${{matrix.codename}}, bullseye)
        with:
          context: '{{defaultContext}}:gradio/${{env.GRADIO_MAJOR_VERSION}}/${{matrix.codename}}}}'
          platforms: linux/amd64, linux/386, linux/arm64, linux/arm/v7, linux/arm/v5, linux/ppc64le, linux/s390x
          push: ${{github.event_name != 'pull_request'}}
          tags: ${{steps.meta.outputs.tags}}
          labels: ${{steps.meta.outputs.labels}}
          build-args: |
            PYPI_GRADIO_VERSION
            DISTRO
            CODENAME

      - name: Build and push Docker image from Alpine Linux
        uses: docker/build-push-action@v4
        env:
          PYPI_GRADIO_VERSION: ${{matrix.gradio}}
          DISTRO: ${{matrix.distro}}
          CODENAME: ${{matrix.codename}}
          if: contains(${{matrix.codename}}, alpine)
          with:
          context: '{{defaultContext}}:gradio/${{env.GRADIO_MAJOR_VERSION}}/${{matrix.codename}}}}'
          platforms: linux/amd64, linux/386, linux/arm64, linux/arm/v7, linux/arm/v6, linux/ppc64le, linux/s390x
          push: ${{github.event_name != 'pull_request'}}
          tags: ${{steps.meta.outputs.tags}}
          labels: ${{steps.meta.outputs.labels}}
          build-args: |
            PYPI_GRADIO_VERSION
            DISTRO
            CODENAME
